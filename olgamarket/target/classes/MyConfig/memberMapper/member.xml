<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">

<!-- 회원가입 -->
	<insert id="memberJoin" parameterType="MemberVO">
		insert into members 
			values(#{memId}, #{memPwd}, #{memName}, #{memEmail}, #{memPhone}, #{memAddress}, #{memGender}, #{memGrade}, sysdate, sysdate, #{memChoice})
	</insert>
<!-- 회원가입 id 중복검사 아이디가 있으면 1 없으면 0 -->	
	 <select id="idCheck" resultType="Long">
	 	select count(*) from members where memId = #{memId}
	 </select>
	
<!-- 로그인 -->	
	<select id="memberLogin" resultType="MemberVO">
		select * from members where memId = #{memId} and memPwd = #{memPwd}
	</select>

<!-- 아이디 찾기 DB에 등록된 이름과 핸드폰 번호 검사 -->	
<!-- 20230119 김동훈 수정 -->
	<select id="memIdFindSelect" resultType="MemberVO" parameterType="MemberVO">
		select * from members where memName = #{memName} and memPhone = #{memPhone}
	</select>
<!-- 비밀번호 찾기 DB에 등록된 이름, 아이디, 핸드폰 번호 검사-->	
<!-- 20230119 김동훈 수정 -->
	<select id="memPwdFindSelect" resultType="MemberVO" parameterType="MemberVO">
		select * from members where memName = #{memName} and memId = #{memId} and memPhone = #{memPhone}
	</select>
<!-- 비밀번호 수정 -->
	<update id="memPwdUpdate" parameterType="MemberVO">
		update members set memPwd = #{memPwd} where memId = #{memId}
	</update>
	
<!-- 회원 정보 수정 -->
<!--  업데이트로 바꾸는 항목들 Pwd, Name, Email, Phone, Address, Choice -->
	<update id="memberUpdate" parameterType="MemberVO">
		update members set
			memPwd = #{memPwd}, memName = #{memName}, memEmail = #{memEmail}, 
			memPhone = #{memPhone}, memAddress = #{memAddress}, memGender = #{memGender},
			memChoice = #{memChoice}, memUpdDate = sysdate
				where memId = #{memId}
	</update>	
	
<!-- 회원 탈퇴 -->	
	<delete id="memberDeleteOne" parameterType="String">
		delete from members where memId = #{memId}
	</delete>

<!-- 모든 회원 나타내기 -->
	<select id="memberList" resultType="MemberVO" parameterType="String" >
		select * from members 
		<if test="memId != null">
			where memId like '%' || #{memId} || '%'
		</if>
	</select>
	
<!-- 관리자 멤버관리 + 페이징 -->
<!-- 추후 삭제 결정 
	<select id="getMemberPageList" parameterType="PagingVO" resultType="NoticeVO">
		select * from
			(select memId, memPwd, memName, memEmail, memPhone, memAddress, memGender,
			memGrade, memRegiDate, memUpdDate, memChoice, row_number OVER(order by memName desc) as Rnum
			from members) mp
				where Rnum <![CDATA[>=]]> #{contStart} and rnum <![CDATA[<=]]> #{contEnd}
	      				order by memName desc
	</select>	
	
	<select id="getMemberCount" parameterType="int" resultType="Integer">
		select count(*) members
	</select>
-->	
	
	
	<!-- 2023 01 17 김동훈 추가 -->
	<select id="emailCheck" resultType="Long" parameterType="String">
	 	select count(*) from members where memEmail = #{memEmail}
	 </select>	

<!-- 관리자 회원 관리 -->	 
	<select id="getMemAdminCount" parameterType="int" resultType="Integer">
		select count(*) from members 
	</select>
	
	<select id="getMemAdminPageList" parameterType="PagingVO" resultType="MemberVO">
		select * from 
			(select rownum rnum, temp.* from
				(select plmemid from (SELECT sum(pltotalprice) as total, plmemid FROM purchaseLists 
					where (select EXTRACT(MONTH FROM(SELECT ADD_MONTHS(TO_DATE(sysdate,'YYYY-MM-DD'), -1) PREV_MONTH FROM DUAL)) from dual)
						= (select EXTRACT(MONTH FROM plDate) AS MONTHS from dual) GROUP BY plmemid)
						    where 
						    	<if test='sort == 1'>
									total <![CDATA[<]]> 200000
								</if>
								<if test='sort == 2'>
									total > 200000 and <![CDATA[<]]> 500000
								</if>
								<if test='sort == 3'>
									total > 500000
								</if>
					) 
			temp) 
		where rnum <![CDATA[>=]]> #{contStart} and rnum <![CDATA[<=]]> #{contEnd}	   				
	</select>
	
<!-- 관리자 회원 관리 아이디 조회 -->	
	<select id="memSelectOne" resultType="MemberVO">
		select * from members where memId = #{memId}
	</select>
	
<!-- 관리자 회원 등급 업데이트 -->
	<update id="memGradeUpdate" parameterType="MemberVO">
		update members set memGrade = #{memGrade} where memId = #{memId}
	</update>
	
	
</mapper>













